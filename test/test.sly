
;; (if #f
;; 	(begin
;; 	  (define (foo x)
;; 		(if (> x 0)
;; 			(begin (display x)
;; 				   (foo (- x 1)))
;; 			(void)))
;; 	  (foo 10))
;; 	(void))

;; fix test

(define n 10)
(define (foo x) (+ x n))
(define (bar x) (- x n))

(display (foo 5))
(display (bar 5))

;;((lambda (x y) (* x y)) 6 5)

;; (define (foo x)
;;   (if (> x 0)
;; 	  (begin (display x)
;; 			 (foo (- x 1)))
;; 	  (display "done")))
;; (foo 10)

;; (define x 3)
;; (define (foo x y) (* x y))
;; (display (/ (foo 69 420) x))
;; (display x)
