(require "sly-lib/list.sly")
(require "sly-lib/quasiquote.sly")
(require "sly-lib/syntax-case.sly")
(require "sly-lib/syntax-rules.sly")
(require "sly-lib/with-syntax.sly")
(require "sly-lib/basic-special-forms.sly")

(provide define-module import)

(define-syntax define-module
  (syntax-rules ()
	[(_ name (export id ...) body ...)
	 (begin
	   (provide name)
	   (define name (make-dictionary))
	   body ...
	   (dictionary-set! name 'id id) ...)]))

(define-syntax import
  (lambda (x)
	(syntax-case x ()
	  [(import s-name)
	   (let ([name (string-join (list (symbol->string (syntax->datum #'s-name)) ".sly") "")])
		 (datum->syntax #'import (list 'require name)))])))
