(define-syntax syntax-rules
  (lambda (form)
	(syntax-case form ()
	  ((_ (k ...) ((keyword . pattern) template) ...)
	   (let ([foo #'(lambda (form)
					  (syntax-case form (k ...)
						((_ . pattern) #'template)
						...))])
		 (displayln (syntax->datum foo))
		 foo)))))

;; (lambda (form)
;;   (syntax-case form (=> else)
;; 	((dummy (test) clauses ...) (syntax-quote (let ((res test)) (if res res (cond clauses ...)))))
;; 	((dummy (test e e* ...) clauses ...) (syntax-quote (if test (begin e e* ...) (cond clauses ...))))
;; 	((dummy (test => expr) clauses ...) (syntax-quote (let ((res test)) (if res (expr res) (cond clauses ...)))))
;; 	((dummy (else e e* ...)) (syntax-quote (begin e e* ...)))
;; 	((dummy) (syntax-quote (void)))))

(display "FINISHED FILE: sly-lib/syntax-rules.sly\n")
