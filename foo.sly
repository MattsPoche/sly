(define-syntax (my-unless form)
  (define fst (car form))
  (set! form (cdr form))
  (define condition (car form))
  (define body (cdr form))
  #`(if (not #,condition)
		(begin #,@body)
		(void)))

;; (define-syntax (when form)
;;   (syntax-case form ()
;; 	((when test e e* ...)
;; 	 #'(begin
;; 		 (displayln "hello, from new when!!!")
;; 		 (if test (begin e e* ...) (void))))))

(define-syntax when
  (syntax-rules ()
	((when test e e* ...)
	 (begin
	   (displayln "hello, from new when!!!")
	   (if test (begin e e* ...) (void))))))

((lambda ()
   (define (not x) x)
   (my-unless #t
			  (display "this should not be printed!\n"))))

(when #t
  (displayln "hello")
  (displayln "world"))

(display "hello, world\n")
