(require "sly-lib/base.sly")

(let ([x 69] [y 420])
 (displayln x)
 (displayln y)
 (displayln (+ x y)))

(let loop ([i 0])
  (when (< i 10)
	(displayln i)
	(loop (+ i 1))))

(let* ([x 69]
	   [y 420]
	   [z (* x y )])
  (displayln x)
  (displayln y)
  (displayln z))

(displayln
 (letrec ((even?
           (lambda (n)
             (if (zero? n)
                 #t
                 (odd? (- n 1)))))
          (odd?
           (lambda (n)
             (if (zero? n)
                 #f
                 (even? (- n 1))))))
   (even? 88)))

(disassemble (lambda ()
			   (displayln
				(if (> 3 3)
					(begin 'greater)
					(if (< 3 3)
						(begin 'less)
						(begin  'equal))))))

(displayln (cond [(> 3 3) 'greater]
				 [(< 3 3) 'less]
				 [else 'equal]))
